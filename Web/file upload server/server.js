// ðŸ“Œ Gerekli modÃ¼ller
const express = require('express');     // Web sunucusu framework'Ã¼
const multer = require('multer');       // Dosya yÃ¼kleme iÅŸlemleri iÃ§in
const path = require('path');           // Dosya/dizin yollarÄ±
const cors = require('cors');           // CORS izinleri
const fs = require('fs');               // Dosya sistemi iÅŸlemleri

const app = express();

// ðŸ“Œ YÃ¼klemelerin kaydedileceÄŸi klasÃ¶r
const uploadDir = path.join(__dirname, 'uploads');

// EÄŸer klasÃ¶r yoksa oluÅŸtur
if (!fs.existsSync(uploadDir)) {
  fs.mkdirSync(uploadDir);
}

// ðŸ“Œ Multer depolama ayarlarÄ±
const storage = multer.diskStorage({
  // DosyalarÄ±n kaydedileceÄŸi klasÃ¶r
  destination: (req, file, cb) => {
    cb(null, uploadDir);
  },
  // Dosya adÄ±nÄ± belirleme
  filename: (req, file, cb) => {
    const originalName = file.originalname;        // Orijinal dosya adÄ±
    const ext = path.extname(originalName);        // UzantÄ± (.jpg, .pdf, vb.)
    const nameWithoutExt = path.basename(originalName, ext); // UzantÄ±sÄ±z ad

    let finalName = originalName; // Kaydedilecek dosya adÄ±
    let counter = 1;

    // AynÄ± isimde dosya varsa sonuna (1), (2) ekle
    while (fs.existsSync(path.join(uploadDir, finalName))) {
      finalName = `${nameWithoutExt}(${counter})${ext}`;
      counter++;
    }

    cb(null, finalName);
  }
});

// ðŸ“Œ Multer middleware tanÄ±mÄ±
const upload = multer({ storage: storage });

// ðŸ“Œ CORS aktif et
app.use(cors());

// ðŸ“Œ Statik dosyalarÄ± sun
app.use(express.static(path.join(__dirname, 'public'))); // Frontend dosyalarÄ±
app.use('/uploads', express.static(uploadDir)); // YÃ¼klenen dosyalarÄ± gÃ¶rÃ¼ntÃ¼leme

// ðŸ“Œ YÃ¼klenen tÃ¼m dosyalarÄ± listeleme endpoint'i
app.get('/files', (req, res) => {
  fs.readdir(uploadDir, (err, files) => {
    if (err) {
      return res.status(500).json({ success: false, message: "Dosyalar okunamadÄ±" });
    }
    res.json({ success: true, files });
  });
});

// ðŸ“Œ Dosya yÃ¼kleme endpoint'i
app.post('/upload', upload.array('files'), (req, res) => {
  if (!req.files || req.files.length === 0) {
    return res.status(400).json({ success: false, message: "Dosya bulunamadÄ±" });
  }
  console.log('YÃ¼klenen dosyalar:', req.files);
  res.json({ success: true, files: req.files });
});

// ðŸ“Œ Sunucuyu baÅŸlat
const PORT = 3000;
app.listen(PORT, '0.0.0.0', () => {
  console.log(`Sunucu http://0.0.0.0:${PORT} adresinde Ã§alÄ±ÅŸÄ±yor`);
});
